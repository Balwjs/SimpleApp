version: "3.9"
services:
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: trading_middleware_app
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL:-sqlite+aiosqlite:///./app.db}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - SECRET=${SECRET:-CHANGE_ME}
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/healthz"]
      interval: 30s
      timeout: 5s
      retries: 3
  db:
    image: postgres:16-alpine
    container_name: trading_middleware_db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-app}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-app}
      - POSTGRES_DB=${POSTGRES_DB:-app}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-app}"]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:7-alpine
    container_name: trading_middleware_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
volumes:
  pgdata:
